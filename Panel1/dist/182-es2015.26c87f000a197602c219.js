(self.webpackChunktravelagencyangular=self.webpackChunktravelagencyangular||[]).push([[182],{11182:function(e,t,s){"use strict";s.r(t),s.d(t,{gx_select:function(){return o}});var n=s(46841);let i=0;class l{constructor(e){this.component=e,this.options=[],this.selectId||this.component.readonly||(this.selectId=this.component.element.id?`${this.component.element.id}__select`:"gx-select-auto-id-"+i++)}updateOptions(e){this.options=e}getNativeInputId(){return this.component.readonly?null:this.selectId}getCssClasses(){const e=[];return e.push(this.component.readonly?"form-control-plaintext":"custom-select"),this.component.cssClass&&e.push(this.component.cssClass),e.join(" ")}getReadonlyTextContent(){const e=this.options.filter(e=>e.value===this.component.value);return e.length>0?e[0].innerText:""}getValueFromEvent(e){return e.target&&e.target.value}handleChange(e){this.component.value=this.getValueFromEvent(e),this.component.input.emit(e)}render(){if(this.component.readonly)return(0,n.h)("span",{class:this.getCssClasses()},this.getReadonlyTextContent());{let e;const t={"aria-disabled":this.component.disabled?"true":void 0,class:this.getCssClasses(),disabled:this.component.disabled,id:this.selectId,onChange:this.handleChange.bind(this),ref:e=>{e.value=this.component.value}};return this.component.suggest&&(e=`${this.selectId}__datalist`),this.component.suggest?[(0,n.h)("gx-bootstrap",null),(0,n.h)("input",{list:e,disabled:this.component.disabled,placeholder:this.component.placeholder,value:this.component.value,onChange:this.handleChange.bind(this)}),(0,n.h)("datalist",{id:e},this.options.map(({innerText:e,selected:t,value:s,disabled:i})=>(0,n.h)("option",{disabled:i,selected:t,value:s},e)))]:[(0,n.h)("gx-bootstrap",null),(0,n.h)("select",Object.assign({},t),this.options.map(({innerText:e,selected:t,value:s,disabled:i})=>(0,n.h)("option",{disabled:i,selected:t,value:s},e)))]}}}const o=class{constructor(e){(0,n.r)(this,e),this.input=(0,n.c)(this,"input",7),this.options=[],this.invisibleMode="collapse",this.disabled=!1,this.renderer=new l(this)}getChildOptions(){return Array.from(this.element.querySelectorAll("gx-select-option")).map(e=>({disabled:e.disabled,innerText:e.innerText,selected:e.selected,value:e.value}))}updateOptions(e){this.options=e,this.renderer.updateOptions(e)}valueChanged(){const e=Array.from(this.element.querySelectorAll("gx-select-option"));e.forEach(e=>{e.selected=e.value===this.value}),this.updateOptions(e.map(e=>({disabled:e.disabled,innerText:e.innerText,selected:e.selected,value:e.value}))),this.didLoad&&this.input.emit({value:this.value})}onSelectOptionDidLoad(e){const t=e.target;this.value?t.selected=this.value===t.value:t.selected&&(this.value=t.value),this.updateOptions(this.getChildOptions())}onSelectOptionDidUnload(){this.updateOptions(this.getChildOptions())}onSelectOptionDisable(){this.updateOptions(this.getChildOptions())}onSelectOptionChange(){this.updateOptions(this.getChildOptions())}onSelectOptionSelect(e){this.options.forEach(t=>{t===e.target?t.value!==this.value&&(this.value=t.value):t.selected=!1})}async getNativeInputId(){return this.renderer.getNativeInputId()}componentDidLoad(){this.didLoad=!0}render(){return this.renderer.render()}get element(){return(0,n.g)(this)}static get watchers(){return{value:["valueChanged"]}}}}}]);