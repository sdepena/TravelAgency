var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __generator = (this && this.__generator) || function (thisArg, body) {
    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
    return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;
    function verb(n) { return function (v) { return step([n, v]); }; }
    function step(op) {
        if (f) throw new TypeError("Generator is already executing.");
        while (_) try {
            if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
            if (y = 0, t) op = [op[0] & 2, t.value];
            switch (op[0]) {
                case 0: case 1: t = op; break;
                case 4: _.label++; return { value: op[1], done: false };
                case 5: _.label++; y = op[1]; op = [0]; continue;
                case 7: op = _.ops.pop(); _.trys.pop(); continue;
                default:
                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }
                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }
                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }
                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }
                    if (t[2]) _.ops.pop();
                    _.trys.pop(); continue;
            }
            op = body.call(thisArg, _);
        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }
        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };
    }
};
import { r as registerInstance, c as createEvent, h, g as getElement } from './index-10623738.js';
var ratingCss = ".gx-line-clamp{display:-webkit-box;-webkit-box-orient:vertical;-webkit-line-clamp:var(--max-lines);overflow:hidden;max-height:var(--max-height)}.line-measuring{visibility:hidden;position:absolute}gx-rating{display:block;--active-stars-color:#e4ac13;--active-stars-shadow-color:var(--active-stars-color);--inactive-stars-color:rgba(80, 80, 80, 0.6);--inactive-stars-hover-color:rgba(80, 80, 80, 0.4);--star-width:2em;--star-heigth:auto;--star-separation:2px}gx-rating[hidden]{display:none !important}gx-rating[hidden][invisible-mode=keep-space]{display:block !important;visibility:hidden}gx-rating div.rating:hover svg:nth-child(n) polygon{fill:var(--active-stars-color)}gx-rating div.rating:hover svg:nth-child(n):hover~svg polygon{fill:var(--inactive-stars-hover-color)}gx-rating div.rating svg{height:var(--star-heigth);width:var(--star-width);padding:0px var(--star-separation);cursor:pointer}gx-rating div.rating svg polygon{fill:var(--inactive-stars-color);-webkit-transition:0.4s ease;transition:0.4s ease}gx-rating input{display:none}gx-rating div.rating{height:-webkit-max-content;height:-moz-max-content;height:max-content;width:-webkit-max-content;width:-moz-max-content;width:max-content;display:-ms-flexbox;display:flex;-ms-flex-direction:row;flex-direction:row;-ms-flex-pack:justify;justify-content:space-between;-ms-flex-align:center;align-items:center;-ms-flex-wrap:wrap;flex-wrap:wrap}gx-rating div.rating[data-score=\"1\"] svg{-webkit-filter:drop-shadow(0 0 2px var(--active-stars-shadow-color));filter:drop-shadow(0 0 2px var(--active-stars-shadow-color))}gx-rating div.rating[data-score=\"1\"] svg polygon{fill:var(--active-stars-color)}gx-rating div.rating[data-score=\"1\"] svg:nth-child(1)~svg{-webkit-filter:none;filter:none}gx-rating div.rating[data-score=\"1\"] svg:nth-child(1)~svg polygon{fill:var(--inactive-stars-color)}gx-rating div.rating[data-score=\"1\"]:hover svg~svg polygon{fill:var(--active-stars-color)}gx-rating div.rating[data-score=\"1\"]:hover svg:hover~svg polygon{fill:var(--inactive-stars-hover-color)}gx-rating div.rating[data-score=\"2\"] svg{-webkit-filter:drop-shadow(0 0 2px var(--active-stars-shadow-color));filter:drop-shadow(0 0 2px var(--active-stars-shadow-color))}gx-rating div.rating[data-score=\"2\"] svg polygon{fill:var(--active-stars-color)}gx-rating div.rating[data-score=\"2\"] svg:nth-child(2)~svg{-webkit-filter:none;filter:none}gx-rating div.rating[data-score=\"2\"] svg:nth-child(2)~svg polygon{fill:var(--inactive-stars-color)}gx-rating div.rating[data-score=\"2\"]:hover svg~svg polygon{fill:var(--active-stars-color)}gx-rating div.rating[data-score=\"2\"]:hover svg:hover~svg polygon{fill:var(--inactive-stars-hover-color)}gx-rating div.rating[data-score=\"3\"] svg{-webkit-filter:drop-shadow(0 0 2px var(--active-stars-shadow-color));filter:drop-shadow(0 0 2px var(--active-stars-shadow-color))}gx-rating div.rating[data-score=\"3\"] svg polygon{fill:var(--active-stars-color)}gx-rating div.rating[data-score=\"3\"] svg:nth-child(3)~svg{-webkit-filter:none;filter:none}gx-rating div.rating[data-score=\"3\"] svg:nth-child(3)~svg polygon{fill:var(--inactive-stars-color)}gx-rating div.rating[data-score=\"3\"]:hover svg~svg polygon{fill:var(--active-stars-color)}gx-rating div.rating[data-score=\"3\"]:hover svg:hover~svg polygon{fill:var(--inactive-stars-hover-color)}gx-rating div.rating[data-score=\"4\"] svg{-webkit-filter:drop-shadow(0 0 2px var(--active-stars-shadow-color));filter:drop-shadow(0 0 2px var(--active-stars-shadow-color))}gx-rating div.rating[data-score=\"4\"] svg polygon{fill:var(--active-stars-color)}gx-rating div.rating[data-score=\"4\"] svg:nth-child(4)~svg{-webkit-filter:none;filter:none}gx-rating div.rating[data-score=\"4\"] svg:nth-child(4)~svg polygon{fill:var(--inactive-stars-color)}gx-rating div.rating[data-score=\"4\"]:hover svg~svg polygon{fill:var(--active-stars-color)}gx-rating div.rating[data-score=\"4\"]:hover svg:hover~svg polygon{fill:var(--inactive-stars-hover-color)}gx-rating div.rating[data-score=\"5\"] svg{-webkit-filter:drop-shadow(0 0 2px var(--active-stars-shadow-color));filter:drop-shadow(0 0 2px var(--active-stars-shadow-color))}gx-rating div.rating[data-score=\"5\"] svg polygon{fill:var(--active-stars-color)}gx-rating div.rating[data-score=\"5\"] svg:nth-child(5)~svg{-webkit-filter:none;filter:none}gx-rating div.rating[data-score=\"5\"] svg:nth-child(5)~svg polygon{fill:var(--inactive-stars-color)}gx-rating div.rating[data-score=\"5\"]:hover svg~svg polygon{fill:var(--active-stars-color)}gx-rating div.rating[data-score=\"5\"]:hover svg:hover~svg polygon{fill:var(--inactive-stars-hover-color)}gx-rating div.score{height:-webkit-max-content;height:-moz-max-content;height:max-content;width:-webkit-max-content;width:-moz-max-content;width:max-content;display:-ms-flexbox;display:flex;-ms-flex-direction:row;flex-direction:row;-ms-flex-pack:justify;justify-content:space-between;-ms-flex-align:center;align-items:center;-ms-flex-wrap:wrap;flex-wrap:wrap}gx-rating div.score svg{height:auto;width:2em;padding:0px var(--star-separation)}gx-rating div.score svg polygon{fill:var(--inactive-stars-color);-webkit-transition:0.3s ease;transition:0.3s ease}gx-rating div.score svg.active{-webkit-filter:drop-shadow(0 0 2px var(--active-stars-shadow-color));filter:drop-shadow(0 0 2px var(--active-stars-shadow-color))}gx-rating div.score svg.active polygon{fill:var(--active-stars-color)}";
var autoInputRangeId = 0;
var Rating = /** @class */ (function () {
    function class_1(hostRef) {
        registerInstance(this, hostRef);
        this.input = createEvent(this, "input", 7);
        this.svgViewport = {
            viewBox: "0 0 100 100"
        };
        /**
         * This attribute allows you specify if the element is disabled.
         * If disabled, it will not trigger any user interaction related event
         * (for example, click event).
         */
        this.disabled = false;
        /**
         * This attribute lets you specify how this element will behave when hidden.
         *
         * | Value        | Details                                                                     |
         * | ------------ | --------------------------------------------------------------------------- |
         * | `keep-space` | The element remains in the document flow, and it does occupy space.         |
         * | `collapse`   | The element is removed form the document flow, and it doesn't occupy space. |
         */
        this.invisibleMode = "collapse";
        /**
         * This attribute indicates that the user cannot modify the value of the control.
         * Same as [readonly](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#attr-readonly)
         * attribute for `input` elements.
         * _Disable by default_
         */
        this.readonly = false;
        /**
         * The current value displayed by the component.
         *
         */
        this.value = 0;
        this.handleClick = this.handleClick.bind(this);
    }
    class_1.prototype.handleClick = function (event) {
        var element = event.target;
        var targetParent = element.parentElement;
        var score = element.nodeName === "polygon"
            ? Array.from(targetParent.parentElement.children).indexOf(targetParent) + 1
            : Array.from(targetParent.children).indexOf(element) + 1;
        this.value = score;
        this.input.emit(this);
    };
    /**
     * Returns the id of the inner `input` element (if set).
     */
    class_1.prototype.getNativeInputId = function () {
        return __awaiter(this, void 0, void 0, function () {
            return __generator(this, function (_a) {
                return [2 /*return*/, this.element.querySelector("input").id];
            });
        });
    };
    class_1.prototype.renderStarsRating = function () {
        var stars = [];
        for (var i = 0; i < 5; i++) {
            stars.push(h("svg", Object.assign({ class: "rating" }, this.svgViewport, { onClick: this.handleClick }), this.renderStarShape()));
        }
        return stars;
    };
    class_1.prototype.renderStarsScore = function () {
        var stars = [];
        var percent;
        var starsScore;
        if (this.maxValue - this.value >= 0) {
            percent = (this.value * 100) / this.maxValue;
            starsScore = Math.round((percent * 5) / 100);
        }
        else {
            console.error("'value' cannot be greater than 'max-value'");
        }
        for (var i = 0; i < 5; i++) {
            stars.push(h("svg", Object.assign({ class: {
                    active: i < starsScore,
                    score: true
                } }, this.svgViewport), this.renderStarShape()));
        }
        return stars;
    };
    class_1.prototype.render = function () {
        var valuesDifference = this.maxValue - this.value;
        if (!this.inputId) {
            this.element.id
                ? (this.inputId = this.element.id + "_inputRange")
                : (this.inputId = "gx-inputRange-auto-id-" + autoInputRangeId++);
        }
        if ((valuesDifference >= 0 && this.readonly) || !this.readonly) {
            return (h("div", null, h("input", { id: this.inputId, type: "range", min: "0", max: this.readonly ? this.maxValue : 5, step: "1", value: this.value }), h("div", { class: {
                    rating: !this.readonly,
                    score: this.readonly
                }, "data-score": this.value !== 0 ? this.value : undefined }, this.readonly ? this.renderStarsScore() : this.renderStarsRating())));
        }
        else {
            if (this.maxValue !== 0) {
                console.error("'value' cannot be higher than 'max-value'.", this.element);
            }
            else {
                console.error("'max-value' has not a value set.", this.element);
            }
        }
    };
    class_1.prototype.renderStarShape = function () {
        return h("polygon", { points: "50,0 15,95 100,35 0,35 85,95" });
    };
    Object.defineProperty(class_1.prototype, "element", {
        get: function () { return getElement(this); },
        enumerable: false,
        configurable: true
    });
    return class_1;
}());
Rating.style = ratingCss;
export { Rating as gx_rating };
