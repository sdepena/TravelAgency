import { r as registerInstance, c as createEvent, g as getElement } from './index-10623738.js';
var gaugeRangeCss = ".gx-line-clamp{display:-webkit-box;-webkit-box-orient:vertical;-webkit-line-clamp:var(--max-lines);overflow:hidden;max-height:var(--max-height)}.line-measuring{visibility:hidden;position:absolute}gx-gauge-range{display:block}gx-gauge-range[hidden]{display:none !important}gx-gauge-range[hidden][invisible-mode=keep-space]{display:block !important;visibility:hidden}";
var GaugeRange = /** @class */ (function () {
    function GaugeRange(hostRef) {
        registerInstance(this, hostRef);
        this.gxGaugeRangeDidLoad = createEvent(this, "gxGaugeRangeDidLoad", 7);
        this.gxGaugeRangeDidUnload = createEvent(this, "gxGaugeRangeDidUnload", 7);
        this.gxGaugeRangeDidUpdate = createEvent(this, "gxGaugeRangeDidUpdate", 7);
    }
    GaugeRange.prototype.componentDidLoad = function () {
        this.gxGaugeRangeDidLoad.emit(this);
    };
    GaugeRange.prototype.componentDidUnload = function () {
        this.gxGaugeRangeDidUnload.emit(this);
    };
    GaugeRange.prototype.componentDidUpdate = function () {
        this.gxGaugeRangeDidUpdate.emit(this);
    };
    GaugeRange.prototype.render = function () {
        return "";
    };
    Object.defineProperty(GaugeRange.prototype, "element", {
        get: function () { return getElement(this); },
        enumerable: false,
        configurable: true
    });
    return GaugeRange;
}());
GaugeRange.style = gaugeRangeCss;
export { GaugeRange as gx_gauge_range };
