import { r as registerInstance, c as createEvent, h, g as getElement } from './index-10623738.js';
import { a as polyline, p as parseCoords } from './coordsValidate-cde38689.js';
var MapLine = /** @class */ (function () {
    function MapLine(hostRef) {
        registerInstance(this, hostRef);
        this.gxMapLineDidLoad = createEvent(this, "gxMapLineDidLoad", 7);
        this.gxMapLineDeleted = createEvent(this, "gxMapLineDeleted", 7);
        /**
         * The coordinates where the line/polyline will appear in the map.
         *
         */
        this.coords = "0, 0";
    }
    MapLine.prototype.setupLine = function (coords) {
        this.lineInstance = polyline(coords, {
            color: "red",
            weight: 3
        });
    };
    MapLine.prototype.componentDidLoad = function () {
        var coords = parseCoords(this.coords);
        if (coords !== null) {
            this.setupLine(coords);
        }
        else {
            console.warn("GX warning: Cannot read 'coords' attribute, default coords set (gx-map-line)", this.element);
            this.setupLine([0, 0]);
        }
        this.gxMapLineDidLoad.emit(this.lineInstance);
    };
    MapLine.prototype.componentDidUnload = function () {
        this.gxMapLineDeleted.emit(this.lineInstance);
    };
    MapLine.prototype.render = function () {
        return (h("div", null, h("slot", null)));
    };
    Object.defineProperty(MapLine.prototype, "element", {
        get: function () { return getElement(this); },
        enumerable: false,
        configurable: true
    });
    return MapLine;
}());
export { MapLine as gx_map_line };
