var HIGHLIGHT_EVENT_NAME = "highlight";
var UNHIGHTLIGHT_EVENT_NAME = "unhighlight";
var HIGHLIGHT_CLASS_NAME = "gx-highlighted";
var isSetup = false;
function makeHighlightable(component) {
    if (component.highlightable) {
        if (!isSetup) {
            isSetup = true;
            setup();
        }
        component.element.addEventListener(HIGHLIGHT_EVENT_NAME, function (event) {
            event.stopPropagation();
            component.element.classList.add(HIGHLIGHT_CLASS_NAME);
        });
        component.element.addEventListener(UNHIGHTLIGHT_EVENT_NAME, function (event) {
            event.stopPropagation();
            component.element.classList.remove(HIGHLIGHT_CLASS_NAME);
        });
    }
}
function setup() {
    setupEvent("mousedown", "mouseup", "mousemove");
    setupEvent("touchstart", "touchend", "touchmove");
}
function setupEvent(startEventName, endEventName, moveEventName) {
    document.body.addEventListener(startEventName, function (startEvent) {
        fireCustomEvent(HIGHLIGHT_EVENT_NAME, startEvent.target);
        var mouseUpHandler = function (endEvent) {
            fireCustomEvent(UNHIGHTLIGHT_EVENT_NAME, endEvent.target);
            document.body.removeEventListener(endEventName, mouseUpHandler);
            document.body.removeEventListener(moveEventName, mouseUpHandler);
        };
        document.body.addEventListener(endEventName, mouseUpHandler);
        document.body.addEventListener(moveEventName, mouseUpHandler);
    });
}
function fireCustomEvent(eventName, element) {
    var highlightEvent = new CustomEvent(eventName, {
        bubbles: true
    });
    element.dispatchEvent(highlightEvent);
}
export { makeHighlightable as m };
