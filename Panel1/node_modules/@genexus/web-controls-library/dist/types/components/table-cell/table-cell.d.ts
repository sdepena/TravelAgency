import { Component as GxComponent } from "../common/interfaces";
export declare class TableCell implements GxComponent {
    element: HTMLGxTableCellElement;
    /**
     * Like the `grid-area` CSS property, this attribute gives a name to the item,
     * so it can be used from the [areas-template attributes](../table/readme.md#areas-template)
     * of the gx-table element.
     */
    readonly area: string;
    /**
     * Defines the horizontal aligmnent of the content of the cell.
     */
    readonly align: "left" | "right" | "center";
    /**
     * This attribute defines how the control behaves when the content overflows.
     *
     * | Value    | Details                                                     |
     * | -------- | ----------------------------------------------------------- |
     * | `scroll` | The overflowin content is hidden, but scrollbars are shown  |
     * | `clip`   | The overflowing content is hidden, without scrollbars       |
     *
     */
    readonly overflowMode: "scroll" | "clip";
    /**
     * This attribute defines the maximum height of the cell.
     *
     */
    readonly maxHeight: string;
    /**
     * This attribute defines the minimum height of the cell when its contents are visible.
     * Ignored if its content has `invisible-mode` = `collapse` and is hidden.
     *
     */
    readonly minHeight: string;
    /**
     * True to add a fading overlay on the right and bottom area of the cell to signify
     * that the content is longer than the space allows.
     */
    readonly showContentFade = false;
    /**
     * Defines the vertical aligmnent of the content of the cell.
     */
    readonly valign: "top" | "bottom" | "medium";
    private observer;
    componentDidRender(): void;
    componentDidLoad(): void;
    private setupObserver;
    private setMinHeight;
    private setMaxHeight;
    disconnectedCallback(): void;
    render(): any;
}
