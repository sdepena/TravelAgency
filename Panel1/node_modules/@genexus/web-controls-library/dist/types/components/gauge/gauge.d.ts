import { EventEmitter } from "../../stencil-public-runtime";
import { Component as GxComponent } from "../common/interfaces";
export declare class Gauge implements GxComponent {
    element: HTMLGxGaugeElement;
    /**
     * The `gxGaugeDidLoad` event is triggered when the component has been rendered completely.
     */
    gxGaugeDidLoad: EventEmitter;
    /**
     * This property allows selecting the gauge type. The allowed values are `circle` or `line` (defautl).
     */
    type: "line" | "circle";
    /**
     *  Set `true` to display the current value. Default is `false`.
     *
     */
    showValue: boolean;
    /**
     *  Set `true` to display the minimum and maximum value. Default is `false`.
     *
     */
    showMinMax: boolean;
    /**
     * The minimum value of the gauge
     * 0 by Default
     */
    minValue: number;
    /**
     * The current value of the gauge
     *
     */
    value: number;
    /**
     * Allows specify the width of the circumference _(When gauge is circle type)_ or the width of the bar _(When gauge is Line type)_ in % relative the component size.
     *
     */
    thickness: number;
    /**
     * The maximum value of the gauge.
     * This prop allows specify the maximum value that the gauge will handle. If there is no value specified it will be calculated by the sum of all gx-ranges values
     */
    maxValue: number;
    rangesChildren: any[];
    private maxValueAux;
    private minimumSize;
    private totalAmount;
    onGaugeRangeDidLoad({ detail: childRange }: {
        detail: any;
    }): void;
    private updateMaxValueAux;
    private calcThickness;
    private calcPercentage;
    private addCircleRanges;
    private addLineRanges;
    private addLineRangesLabels;
    private renderCircle;
    private renderLine;
    render(): any;
}
