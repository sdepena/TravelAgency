import { EventEmitter } from "../../stencil-public-runtime";
import { FormComponent } from "../common/interfaces";
export declare class CheckBox implements FormComponent {
    constructor();
    private renderer;
    element: HTMLGxCheckboxElement;
    /**
     * This attribute lets you specify how this element will behave when hidden.
     *
     * | Value        | Details                                                                     |
     * | ------------ | --------------------------------------------------------------------------- |
     * | `keep-space` | The element remains in the document flow, and it does occupy space.         |
     * | `collapse`   | The element is removed form the document flow, and it doesn't occupy space. |
     */
    readonly invisibleMode: "collapse" | "keep-space";
    /**
     * This attribute lets you specify if the element is disabled.
     * If disabled, it will not fire any user interaction related event
     * (for example, click event).
     */
    readonly disabled = false;
    /**
     * Specifies the label of the checkbox.
     */
    readonly caption: string;
    /**
     * Indicates that the control is selected by default.
     */
    checked: boolean;
    /**
     * The value of the control.
     */
    value: string;
    /**
     * The value when the checkbox is 'on'
     */
    readonly checkedValue: string;
    /**
     * The value when the checkbox is 'off'
     */
    readonly unCheckedValue: string;
    /**
     * A CSS class to set as the inner `input` element class.
     */
    readonly cssClass: string;
    /**
     * The `input` event is emitted when a change to the element's value is committed by the user.
     */
    input: EventEmitter;
    /**
     * Returns the id of the inner `input` element (if set).
     */
    getNativeInputId(): Promise<string>;
    protected checkedChanged(): void;
    componentWillLoad(): void;
    protected valueChanged(): void;
    private handleChange;
    private updateValue;
    render(): any;
}
