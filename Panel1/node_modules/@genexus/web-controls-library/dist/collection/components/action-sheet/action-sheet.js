import { Component, Element, Event, Prop, h, Host } from "@stencil/core";
export class ActionSheet {
    constructor() {
        /**
         * This attribute lets you specify if the action sheet is opened or closed.
         */
        this.opened = false;
        this.handleOnClose = this.handleOnClose.bind(this);
        this.handleOnOpen = this.handleOnOpen.bind(this);
    }
    handleItemClick(event) {
        const target = event.target;
        if (target.matches("gx-action-sheet-item")) {
            this.opened = false;
        }
    }
    handleOnClose(e) {
        this.opened = false;
        this.close.emit(e);
    }
    handleOnOpen(e) {
        this.opened = true;
        this.open.emit(e);
    }
    render() {
        return (h(Host, null,
            h("gx-modal", { showHeader: false, opened: this.opened, onClose: this.handleOnClose, onOpen: this.handleOnOpen, onClick: this.handleItemClick },
                h("div", { class: "gx-action-sheet", slot: "body" },
                    h("slot", null)),
                h("gx-action-sheet-item", { class: "gx-action-sheet-close-item", slot: "body" }, this.closeButtonLabel))));
    }
    static get is() { return "gx-action-sheet"; }
    static get originalStyleUrls() { return {
        "$": ["action-sheet.scss"]
    }; }
    static get styleUrls() { return {
        "$": ["action-sheet.css"]
    }; }
    static get properties() { return {
        "closeButtonLabel": {
            "type": "string",
            "mutable": false,
            "complexType": {
                "original": "string",
                "resolved": "string",
                "references": {}
            },
            "required": false,
            "optional": false,
            "docs": {
                "tags": [],
                "text": "This attribute lets you specify the label for the close button. Important for accessibility."
            },
            "attribute": "close-button-label",
            "reflect": false
        },
        "opened": {
            "type": "boolean",
            "mutable": true,
            "complexType": {
                "original": "boolean",
                "resolved": "boolean",
                "references": {}
            },
            "required": false,
            "optional": false,
            "docs": {
                "tags": [],
                "text": "This attribute lets you specify if the action sheet is opened or closed."
            },
            "attribute": "opened",
            "reflect": false,
            "defaultValue": "false"
        }
    }; }
    static get events() { return [{
            "method": "close",
            "name": "close",
            "bubbles": true,
            "cancelable": true,
            "composed": true,
            "docs": {
                "tags": [],
                "text": "Fired when the action sheet is closed"
            },
            "complexType": {
                "original": "any",
                "resolved": "any",
                "references": {}
            }
        }, {
            "method": "open",
            "name": "open",
            "bubbles": true,
            "cancelable": true,
            "composed": true,
            "docs": {
                "tags": [],
                "text": "Fired when the action sheet is opened"
            },
            "complexType": {
                "original": "any",
                "resolved": "any",
                "references": {}
            }
        }]; }
    static get elementRef() { return "element"; }
}
