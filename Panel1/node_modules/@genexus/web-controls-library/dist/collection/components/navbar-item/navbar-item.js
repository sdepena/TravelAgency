import { Component, Element, Host, Prop, h } from "@stencil/core";
export class NavBarItem {
    constructor() {
        /**
         * Indicates if the navbar item is the active one (for example, when the item represents the current page)
         */
        this.active = false;
        /**
         * This attribute lets you specify the URL of the navbar item.
         */
        this.href = "";
        /**
         * This attribute lets you specify the alternate text for the image specified in iconSrc.
         */
        this.iconAltText = "";
        /**
         * This attribute lets you specify the URL of an icon for the navbar item.
         */
        this.iconSrc = "";
    }
    render() {
        const TagName = this.href ? "a" : "button";
        const attris = this.href
            ? {
                href: this.href
            }
            : {
                type: "button"
            };
        return (h(Host, null,
            h(TagName, Object.assign({ class: {
                    item: true,
                    "item-with-icon": !!this.iconSrc,
                    "item--active": this.active
                } }, attris),
                this.iconSrc && (h("img", { class: "item-icon", src: this.iconSrc, alt: this.iconAltText })),
                h("slot", null))));
    }
    static get is() { return "gx-navbar-item"; }
    static get encapsulation() { return "shadow"; }
    static get originalStyleUrls() { return {
        "$": ["navbar-item.scss"]
    }; }
    static get styleUrls() { return {
        "$": ["navbar-item.css"]
    }; }
    static get properties() { return {
        "active": {
            "type": "boolean",
            "mutable": false,
            "complexType": {
                "original": "false",
                "resolved": "boolean",
                "references": {}
            },
            "required": false,
            "optional": false,
            "docs": {
                "tags": [],
                "text": "Indicates if the navbar item is the active one (for example, when the item represents the current page)"
            },
            "attribute": "active",
            "reflect": false,
            "defaultValue": "false"
        },
        "href": {
            "type": "string",
            "mutable": false,
            "complexType": {
                "original": "\"\"",
                "resolved": "\"\"",
                "references": {}
            },
            "required": false,
            "optional": false,
            "docs": {
                "tags": [],
                "text": "This attribute lets you specify the URL of the navbar item."
            },
            "attribute": "href",
            "reflect": false,
            "defaultValue": "\"\""
        },
        "iconAltText": {
            "type": "string",
            "mutable": false,
            "complexType": {
                "original": "\"\"",
                "resolved": "\"\"",
                "references": {}
            },
            "required": false,
            "optional": false,
            "docs": {
                "tags": [],
                "text": "This attribute lets you specify the alternate text for the image specified in iconSrc."
            },
            "attribute": "icon-alt-text",
            "reflect": false,
            "defaultValue": "\"\""
        },
        "iconSrc": {
            "type": "string",
            "mutable": false,
            "complexType": {
                "original": "\"\"",
                "resolved": "\"\"",
                "references": {}
            },
            "required": false,
            "optional": false,
            "docs": {
                "tags": [],
                "text": "This attribute lets you specify the URL of an icon for the navbar item."
            },
            "attribute": "icon-src",
            "reflect": false,
            "defaultValue": "\"\""
        }
    }; }
    static get elementRef() { return "element"; }
}
