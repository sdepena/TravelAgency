import { Component, Element, Prop, h } from "@stencil/core";
export class Audio {
    constructor() {
        /**
         * This attribute lets you specify if the element is disabled.
         */
        this.disabled = false;
    }
    render() {
        return (h("audio", { class: { disabled: this.disabled }, controls: true, src: this.src }));
    }
    static get is() { return "gx-audio"; }
    static get originalStyleUrls() { return {
        "$": ["./audio.scss"]
    }; }
    static get styleUrls() { return {
        "$": ["audio.css"]
    }; }
    static get properties() { return {
        "disabled": {
            "type": "boolean",
            "mutable": false,
            "complexType": {
                "original": "false",
                "resolved": "boolean",
                "references": {}
            },
            "required": false,
            "optional": false,
            "docs": {
                "tags": [],
                "text": "This attribute lets you specify if the element is disabled."
            },
            "attribute": "disabled",
            "reflect": false,
            "defaultValue": "false"
        },
        "src": {
            "type": "string",
            "mutable": false,
            "complexType": {
                "original": "string",
                "resolved": "string",
                "references": {}
            },
            "required": false,
            "optional": false,
            "docs": {
                "tags": [],
                "text": "This attribute is for specifies the src of the audio."
            },
            "attribute": "src",
            "reflect": false
        }
    }; }
    static get elementRef() { return "element"; }
}
