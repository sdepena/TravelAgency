.gx-line-clamp {
  display: -webkit-box;
  -webkit-box-orient: vertical;
  -webkit-line-clamp: var(--max-lines);
  overflow: hidden;
  max-height: var(--max-height);
}

.line-measuring {
  visibility: hidden;
  position: absolute;
}

.gx-grid-base {
  flex: 1;
}
.gx-grid-base > *[slot=grid-content]:not(virtual-scroller), .gx-grid-base > * > .scrollable-content {
  flex: 1;
}
.gx-grid-base > .grid-empty-placeholder, .gx-grid-base > [slot=grid-empty-loading-placeholder] {
  display: none;
}
.gx-grid-base > .grid-empty-placeholder[hidden], .gx-grid-base > [slot=grid-empty-loading-placeholder][hidden] {
  display: none !important;
}
.gx-grid-base > .grid-empty-placeholder[hidden][invisible-mode=keep-space], .gx-grid-base > [slot=grid-empty-loading-placeholder][hidden][invisible-mode=keep-space] {
  display: none !important;
  visibility: hidden;
}
.gx-grid-base > .grid-empty-placeholder > [slot=grid-content-empty] {
  flex: 1;
}

.gx-grid-base.gx-grid-empty:not(.gx-grid-loading) > :first-child {
  display: none;
}
.gx-grid-base.gx-grid-empty:not(.gx-grid-loading) > :first-child[hidden] {
  display: none !important;
}
.gx-grid-base.gx-grid-empty:not(.gx-grid-loading) > :first-child[hidden][invisible-mode=keep-space] {
  display: none !important;
  visibility: hidden;
}
.gx-grid-base.gx-grid-empty:not(.gx-grid-loading) .grid-empty-placeholder {
  display: flex;
  flex: 1;
  height: 100%;
  align-items: center;
  justify-content: center;
}
.gx-grid-base.gx-grid-empty:not(.gx-grid-loading) .grid-empty-placeholder[hidden] {
  display: none !important;
}
.gx-grid-base.gx-grid-empty:not(.gx-grid-loading) .grid-empty-placeholder[hidden][invisible-mode=keep-space] {
  display: flex !important;
  visibility: hidden;
}

.gx-grid-base.gx-grid-empty > *[slot=grid-content]:not(virtual-scroller), .gx-grid-base.gx-grid-empty > * > .scrollable-content,
.gx-grid-base.gx-grid-empty .gx-grid-paging {
  display: none;
}
.gx-grid-base.gx-grid-empty > *[slot=grid-content]:not(virtual-scroller)[hidden], .gx-grid-base.gx-grid-empty > * > .scrollable-content[hidden],
.gx-grid-base.gx-grid-empty .gx-grid-paging[hidden] {
  display: none !important;
}
.gx-grid-base.gx-grid-empty > *[slot=grid-content]:not(virtual-scroller)[hidden][invisible-mode=keep-space], .gx-grid-base.gx-grid-empty > * > .scrollable-content[hidden][invisible-mode=keep-space],
.gx-grid-base.gx-grid-empty .gx-grid-paging[hidden][invisible-mode=keep-space] {
  display: none !important;
  visibility: hidden;
}

.gx-grid-base.gx-grid-empty-loading > :first-child {
  display: none;
}
.gx-grid-base.gx-grid-empty-loading > :first-child[hidden] {
  display: none !important;
}
.gx-grid-base.gx-grid-empty-loading > :first-child[hidden][invisible-mode=keep-space] {
  display: none !important;
  visibility: hidden;
}
.gx-grid-base.gx-grid-empty-loading [slot=grid-empty-loading-placeholder] {
  display: flex;
  flex: 1;
  align-items: center;
  justify-content: center;
  text-align: center;
}
.gx-grid-base.gx-grid-empty-loading [slot=grid-empty-loading-placeholder][hidden] {
  display: none !important;
}
.gx-grid-base.gx-grid-empty-loading [slot=grid-empty-loading-placeholder][hidden][invisible-mode=keep-space] {
  display: flex !important;
  visibility: hidden;
}

.gx-grid-row {
  position: relative;
}

gx-grid-smart-css {
  /**
   * @prop --gx-grid-css-items: Number of Columns or Rows to be shown in the Main axis direction.
   */
  --gx-grid-css-items: 1;
  /**
   * @prop --gx-grid-css-min-size: This attribute value is used to determine the number of columns to be shown
    in a Smart Grid with Multiple by Size in Items Layout Mode.
    The grid will fit as many columns as possible with at least this width, 0 means to use all width.
   */
  --gx-grid-css-min-size: 0;
  /**
   * @prop --gx-grid-css-max-size: This attribute value is used to determine the number of columns in a 
    Smart Grid with Multiple by Size in Items Layout Mode and Vertical scroll direction. 
    The width of the grid items cannot be greater than this maximum. 0 means no maximum.
   */
  --gx-grid-css-max-size: 0;
  display: flex;
}
gx-grid-smart-css[hidden] {
  display: none !important;
}
gx-grid-smart-css[hidden][invisible-mode=keep-space] {
  display: flex !important;
  visibility: hidden;
}
gx-grid-smart-css > div {
  flex: 1;
}
gx-grid-smart-css > *[slot=grid-content]:not(virtual-scroller), gx-grid-smart-css > * > .scrollable-content {
  display: grid;
}
gx-grid-smart-css > *[slot=grid-content]:not(virtual-scroller)[hidden], gx-grid-smart-css > * > .scrollable-content[hidden] {
  display: none !important;
}
gx-grid-smart-css > *[slot=grid-content]:not(virtual-scroller)[hidden][invisible-mode=keep-space], gx-grid-smart-css > * > .scrollable-content[hidden][invisible-mode=keep-space] {
  display: grid !important;
  visibility: hidden;
}
gx-grid-smart-css gx-grid-smart-cell {
  display: flex;
  box-sizing: content-box !important;
}
gx-grid-smart-css gx-grid-smart-cell[hidden] {
  display: none !important;
}
gx-grid-smart-css gx-grid-smart-cell[hidden][invisible-mode=keep-space] {
  display: flex !important;
  visibility: hidden;
}
gx-grid-smart-css gx-grid-smart-cell > * {
  flex: 1;
}
gx-grid-smart-css[direction=vertical]:not([auto-grow]) {
  max-height: var(--gx-grid-css-viewport-size);
  overflow-y: auto;
}
gx-grid-smart-css[snap-to-grid][direction=vertical] > *[slot=grid-content]:not(virtual-scroller), gx-grid-smart-css[snap-to-grid][direction=vertical] > * > .scrollable-content {
  scroll-snap-type: y mandatory;
}
gx-grid-smart-css[snap-to-grid][direction=vertical] > *[slot=grid-content]:not(virtual-scroller) > gx-grid-smart-cell, gx-grid-smart-css[snap-to-grid][direction=vertical] > * > .scrollable-content > gx-grid-smart-cell {
  scroll-snap-align: start;
}
gx-grid-smart-css[direction=horizontal] > *[slot=grid-content]:not(virtual-scroller), gx-grid-smart-css[direction=horizontal] > * > .scrollable-content {
  max-width: var(--gx-grid-css-viewport-size);
  overflow-x: hidden;
}
@media (pointer: coarse) {
  gx-grid-smart-css[direction=horizontal] > *[slot=grid-content]:not(virtual-scroller), gx-grid-smart-css[direction=horizontal] > * > .scrollable-content {
    overflow-x: auto;
  }
}
gx-grid-smart-css[snap-to-grid][direction=horizontal] > *[slot=grid-content]:not(virtual-scroller), gx-grid-smart-css[snap-to-grid][direction=horizontal] > * > .scrollable-content {
  scroll-snap-type: x mandatory;
}
gx-grid-smart-css[snap-to-grid][direction=horizontal] > *[slot=grid-content]:not(virtual-scroller) > gx-grid-smart-cell, gx-grid-smart-css[snap-to-grid][direction=horizontal] > * > .scrollable-content > gx-grid-smart-cell {
  scroll-snap-align: start;
}
gx-grid-smart-css[snap-to-grid][direction=horizontal] .gx-smart-cell-drag-active {
  scroll-snap-type: unset !important;
}

/*
  Vertical Orientation
*/
gx-grid-smart-css[direction=vertical] > *[slot=grid-content]:not(virtual-scroller) > gx-grid-smart-cell[relative-size], gx-grid-smart-css[direction=vertical] > * > .scrollable-content > gx-grid-smart-cell[relative-size] {
  min-height: calc( var(--gx-grid-css-viewport-size) * var(--gx-grid-item-relative-size) );
}

gx-grid-smart-css[direction=vertical][item-layout-mode=single] > *[slot=grid-content]:not(virtual-scroller), gx-grid-smart-css[direction=vertical][item-layout-mode=single] > * > .scrollable-content {
  grid-template-columns: 1fr;
}

gx-grid-smart-css[direction=vertical][item-layout-mode=mbyq] > *[slot=grid-content]:not(virtual-scroller), gx-grid-smart-css[direction=vertical][item-layout-mode=mbyq] > * > .scrollable-content {
  grid-template-columns: repeat(var(--gx-grid-css-items), 1fr);
}

gx-grid-smart-css[direction=vertical][item-layout-mode=mbys] > *[slot=grid-content]:not(virtual-scroller), gx-grid-smart-css[direction=vertical][item-layout-mode=mbys] > * > .scrollable-content {
  grid-template-columns: repeat(auto-fill, minmax(var(--gx-grid-css-min-size), 1fr));
}

/*
  Horizontal Orientation
*/
gx-grid-smart-css[direction=horizontal] > *[slot=grid-content]:not(virtual-scroller) > gx-grid-smart-cell[relative-size], gx-grid-smart-css[direction=horizontal] > * > .scrollable-content > gx-grid-smart-cell[relative-size] {
  width: calc( var(--gx-grid-css-viewport-size) * var(--gx-grid-item-relative-size) );
}

gx-grid-smart-css[direction=horizontal][item-layout-mode=single] > *[slot=grid-content]:not(virtual-scroller), gx-grid-smart-css[direction=horizontal][item-layout-mode=single] > * > .scrollable-content {
  grid-template-rows: 1fr;
  grid-auto-flow: column;
}

gx-grid-smart-css[direction=horizontal][item-layout-mode=mbyq] > *[slot=grid-content]:not(virtual-scroller), gx-grid-smart-css[direction=horizontal][item-layout-mode=mbyq] > * > .scrollable-content {
  grid-template-rows: repeat(var(--gx-grid-css-items), 1fr);
  grid-auto-flow: column;
}

gx-grid-smart-css[direction=horizontal][item-layout-mode=mbys] > *[slot=grid-content]:not(virtual-scroller), gx-grid-smart-css[direction=horizontal][item-layout-mode=mbys] > * > .scrollable-content {
  grid-auto-flow: column;
  grid-template-rows: repeat(auto-fill, minmax(var(--gx-grid-css-min-size), 1fr));
}