import { Component, Event, Prop, Watch } from "@stencil/core";
export class QueryViewerParameter {
    watchValueHandler(newValue, oldValue) {
        this.parameterValueChanged.emit({
            name: this.Name,
            oldValue,
            newValue
        });
    }
    static get is() { return "gx-query-viewer-parameter"; }
    static get properties() { return {
        "Name": {
            "type": "string",
            "mutable": false,
            "complexType": {
                "original": "string",
                "resolved": "string",
                "references": {}
            },
            "required": false,
            "optional": false,
            "docs": {
                "tags": [],
                "text": "Name of the parameter"
            },
            "attribute": "name",
            "reflect": false
        },
        "Value": {
            "type": "string",
            "mutable": false,
            "complexType": {
                "original": "string",
                "resolved": "string",
                "references": {}
            },
            "required": false,
            "optional": false,
            "docs": {
                "tags": [],
                "text": "Value of the parameter"
            },
            "attribute": "value",
            "reflect": false
        }
    }; }
    static get events() { return [{
            "method": "parameterValueChanged",
            "name": "parameterValueChanged",
            "bubbles": true,
            "cancelable": true,
            "composed": true,
            "docs": {
                "tags": [],
                "text": ""
            },
            "complexType": {
                "original": "QueryViewerParameterChangedEvent",
                "resolved": "QueryViewerParameterChangedEvent",
                "references": {
                    "QueryViewerParameterChangedEvent": {
                        "location": "local"
                    }
                }
            }
        }]; }
    static get watchers() { return [{
            "propName": "Value",
            "methodName": "watchValueHandler"
        }]; }
}
