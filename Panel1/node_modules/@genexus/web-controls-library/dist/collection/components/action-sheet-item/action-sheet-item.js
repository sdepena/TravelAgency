import { Component, Element, Prop, h, Host, Listen } from "@stencil/core";
export class ActionSheetItem {
    constructor() {
        /**
         * This attribute lets you specify the type of action. `"cancel"` and `"destructive"` are styled differently
         */
        this.actionType = "default";
        /**
         * This attribute lets you specify if the element is disabled.
         * If disabled, it will not fire any user interaction related event
         * (for example, gxClick event).
         */
        this.disabled = false;
        this.handleClick = this.handleClick.bind(this);
    }
    handleClick(event) {
        if (this.disabled) {
            event.stopPropagation();
        }
        event.preventDefault();
    }
    render() {
        return (h(Host, { class: {
                "gx-as-item": true,
                "gx-as-item--danger": this.actionType === "destructive",
                "gx-as-item--disabled": this.disabled
            } },
            h("slot", null)));
    }
    static get is() { return "gx-action-sheet-item"; }
    static get originalStyleUrls() { return {
        "$": ["action-sheet-item.scss"]
    }; }
    static get styleUrls() { return {
        "$": ["action-sheet-item.css"]
    }; }
    static get properties() { return {
        "actionType": {
            "type": "string",
            "mutable": false,
            "complexType": {
                "original": "\"default\" | \"destructive\"",
                "resolved": "\"default\" | \"destructive\"",
                "references": {}
            },
            "required": false,
            "optional": false,
            "docs": {
                "tags": [],
                "text": "This attribute lets you specify the type of action. `\"cancel\"` and `\"destructive\"` are styled differently"
            },
            "attribute": "action-type",
            "reflect": false,
            "defaultValue": "\"default\""
        },
        "disabled": {
            "type": "boolean",
            "mutable": false,
            "complexType": {
                "original": "false",
                "resolved": "boolean",
                "references": {}
            },
            "required": false,
            "optional": false,
            "docs": {
                "tags": [],
                "text": "This attribute lets you specify if the element is disabled.\nIf disabled, it will not fire any user interaction related event\n(for example, gxClick event)."
            },
            "attribute": "disabled",
            "reflect": false,
            "defaultValue": "false"
        }
    }; }
    static get elementRef() { return "element"; }
    static get listeners() { return [{
            "name": "click",
            "method": "handleClick",
            "target": undefined,
            "capture": true,
            "passive": false
        }]; }
}
