.gx-line-clamp {
  display: -webkit-box;
  -webkit-box-orient: vertical;
  -webkit-line-clamp: var(--max-lines);
  overflow: hidden;
  max-height: var(--max-height);
}

.line-measuring {
  visibility: hidden;
  position: absolute;
}

gx-rating {
  display: block;
  /**
  * @prop --active-stars-color:
   * Set the color that will have the stars.
  */
  --active-stars-color: #e4ac13;
  /**
  * @prop --active-stars-shadow-color:
   * Set the shadow color of actives stars.
  */
  --active-stars-shadow-color: var(--active-stars-color);
  /**
  * @prop --inactive-stars-color:
   * Set the color that will have the stars when are not active _(No rated)_.
  */
  --inactive-stars-color: rgba(80, 80, 80, 0.6);
  /**
  * @prop --inactive-stars-hover-color:
   * Set the color of inactive stars when the user is rating.
  */
  --inactive-stars-hover-color: rgba(80, 80, 80, 0.4);
  /**
  * @prop --star-width:
   * Set the width of each star.
  */
  --star-width: 2em;
  /**
  * @prop --star-heigth:
   * Set the heigth of each star.
  */
  --star-heigth: auto;
  /**
   * @prop --star-separation
   * This is for set the space between each star
  */
  --star-separation: 2px;
}
gx-rating[hidden] {
  display: none !important;
}
gx-rating[hidden][invisible-mode=keep-space] {
  display: block !important;
  visibility: hidden;
}
gx-rating div.rating:hover svg:nth-child(n) polygon {
  fill: var(--active-stars-color);
}
gx-rating div.rating:hover svg:nth-child(n):hover ~ svg polygon {
  fill: var(--inactive-stars-hover-color);
}
gx-rating div.rating svg {
  height: var(--star-heigth);
  width: var(--star-width);
  padding: 0px var(--star-separation);
  cursor: pointer;
}
gx-rating div.rating svg polygon {
  fill: var(--inactive-stars-color);
  transition: 0.4s ease;
}
gx-rating input {
  display: none;
}
gx-rating div.rating {
  height: max-content;
  width: max-content;
  display: flex;
  flex-direction: row;
  justify-content: space-between;
  align-items: center;
  flex-wrap: wrap;
}
gx-rating div.rating[data-score="1"] svg {
  filter: drop-shadow(0 0 2px var(--active-stars-shadow-color));
}
gx-rating div.rating[data-score="1"] svg polygon {
  fill: var(--active-stars-color);
}
gx-rating div.rating[data-score="1"] svg:nth-child(1) ~ svg {
  filter: none;
}
gx-rating div.rating[data-score="1"] svg:nth-child(1) ~ svg polygon {
  fill: var(--inactive-stars-color);
}
gx-rating div.rating[data-score="1"]:hover svg ~ svg polygon {
  fill: var(--active-stars-color);
}
gx-rating div.rating[data-score="1"]:hover svg:hover ~ svg polygon {
  fill: var(--inactive-stars-hover-color);
}
gx-rating div.rating[data-score="2"] svg {
  filter: drop-shadow(0 0 2px var(--active-stars-shadow-color));
}
gx-rating div.rating[data-score="2"] svg polygon {
  fill: var(--active-stars-color);
}
gx-rating div.rating[data-score="2"] svg:nth-child(2) ~ svg {
  filter: none;
}
gx-rating div.rating[data-score="2"] svg:nth-child(2) ~ svg polygon {
  fill: var(--inactive-stars-color);
}
gx-rating div.rating[data-score="2"]:hover svg ~ svg polygon {
  fill: var(--active-stars-color);
}
gx-rating div.rating[data-score="2"]:hover svg:hover ~ svg polygon {
  fill: var(--inactive-stars-hover-color);
}
gx-rating div.rating[data-score="3"] svg {
  filter: drop-shadow(0 0 2px var(--active-stars-shadow-color));
}
gx-rating div.rating[data-score="3"] svg polygon {
  fill: var(--active-stars-color);
}
gx-rating div.rating[data-score="3"] svg:nth-child(3) ~ svg {
  filter: none;
}
gx-rating div.rating[data-score="3"] svg:nth-child(3) ~ svg polygon {
  fill: var(--inactive-stars-color);
}
gx-rating div.rating[data-score="3"]:hover svg ~ svg polygon {
  fill: var(--active-stars-color);
}
gx-rating div.rating[data-score="3"]:hover svg:hover ~ svg polygon {
  fill: var(--inactive-stars-hover-color);
}
gx-rating div.rating[data-score="4"] svg {
  filter: drop-shadow(0 0 2px var(--active-stars-shadow-color));
}
gx-rating div.rating[data-score="4"] svg polygon {
  fill: var(--active-stars-color);
}
gx-rating div.rating[data-score="4"] svg:nth-child(4) ~ svg {
  filter: none;
}
gx-rating div.rating[data-score="4"] svg:nth-child(4) ~ svg polygon {
  fill: var(--inactive-stars-color);
}
gx-rating div.rating[data-score="4"]:hover svg ~ svg polygon {
  fill: var(--active-stars-color);
}
gx-rating div.rating[data-score="4"]:hover svg:hover ~ svg polygon {
  fill: var(--inactive-stars-hover-color);
}
gx-rating div.rating[data-score="5"] svg {
  filter: drop-shadow(0 0 2px var(--active-stars-shadow-color));
}
gx-rating div.rating[data-score="5"] svg polygon {
  fill: var(--active-stars-color);
}
gx-rating div.rating[data-score="5"] svg:nth-child(5) ~ svg {
  filter: none;
}
gx-rating div.rating[data-score="5"] svg:nth-child(5) ~ svg polygon {
  fill: var(--inactive-stars-color);
}
gx-rating div.rating[data-score="5"]:hover svg ~ svg polygon {
  fill: var(--active-stars-color);
}
gx-rating div.rating[data-score="5"]:hover svg:hover ~ svg polygon {
  fill: var(--inactive-stars-hover-color);
}
gx-rating div.score {
  height: max-content;
  width: max-content;
  display: flex;
  flex-direction: row;
  justify-content: space-between;
  align-items: center;
  flex-wrap: wrap;
}
gx-rating div.score svg {
  height: auto;
  width: 2em;
  padding: 0px var(--star-separation);
}
gx-rating div.score svg polygon {
  fill: var(--inactive-stars-color);
  transition: 0.3s ease;
}
gx-rating div.score svg.active {
  filter: drop-shadow(0 0 2px var(--active-stars-shadow-color));
}
gx-rating div.score svg.active polygon {
  fill: var(--active-stars-color);
}