import { Component, Element, Prop, h } from "@stencil/core";
import { FormFieldRender } from "../renders/bootstrap/form-field/form-field-render";
export class FormField {
    constructor() {
        /**
         * This attribute lets you specify how this element will behave when hidden.
         *
         * | Value        | Details                                                                     |
         * | ------------ | --------------------------------------------------------------------------- |
         * | `keep-space` | The element remains in the document flow, and it does occupy space.         |
         * | `collapse`   | The element is removed form the document flow, and it doesn't occupy space. |
         */
        this.invisibleMode = "collapse";
        this.renderer = new FormFieldRender(this);
    }
    componentDidLoad() {
        this.renderer.componentDidLoad();
    }
    render() {
        return this.renderer.render({ default: h("slot", null) });
    }
    static get is() { return "gx-form-field"; }
    static get originalStyleUrls() { return {
        "$": ["form-field.scss"]
    }; }
    static get styleUrls() { return {
        "$": ["form-field.css"]
    }; }
    static get properties() { return {
        "invisibleMode": {
            "type": "string",
            "mutable": false,
            "complexType": {
                "original": "\"collapse\" | \"keep-space\"",
                "resolved": "\"collapse\" | \"keep-space\"",
                "references": {}
            },
            "required": false,
            "optional": false,
            "docs": {
                "tags": [],
                "text": "This attribute lets you specify how this element will behave when hidden.\n\n| Value        | Details                                                                     |\n| ------------ | --------------------------------------------------------------------------- |\n| `keep-space` | The element remains in the document flow, and it does occupy space.         |\n| `collapse`   | The element is removed form the document flow, and it doesn't occupy space. |"
            },
            "attribute": "invisible-mode",
            "reflect": false,
            "defaultValue": "\"collapse\""
        },
        "labelCaption": {
            "type": "string",
            "mutable": false,
            "complexType": {
                "original": "string",
                "resolved": "string",
                "references": {}
            },
            "required": false,
            "optional": false,
            "docs": {
                "tags": [],
                "text": "The text to set as the label of the field."
            },
            "attribute": "label-caption",
            "reflect": false
        },
        "labelPosition": {
            "type": "string",
            "mutable": false,
            "complexType": {
                "original": "| \"none\"\n    | \"top\"\n    | \"right\"\n    | \"bottom\"\n    | \"left\"\n    | \"float\"",
                "resolved": "\"bottom\" | \"float\" | \"left\" | \"none\" | \"right\" | \"top\"",
                "references": {}
            },
            "required": false,
            "optional": false,
            "docs": {
                "tags": [],
                "text": "The position where the label will be located, relative to the edit control. The supported values are:\n\n* `\"top\"`: The label is located above the edit control.\n* `\"right\"`: The label is located at the right side of the edit control.\n* `\"bottom\"`: The label is located below the edit control.\n* `\"left\"`: The label is located at the left side of the edit control.\n* `\"float\"`: The label is shown as a placeholder when the edit control's value is empty. When the value is not empty, the label floats and locates above the edit control.\n* `\"none\"`: The label is rendered, but hidden."
            },
            "attribute": "label-position",
            "reflect": false
        }
    }; }
    static get elementRef() { return "element"; }
}
