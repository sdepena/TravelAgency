import { h } from "@stencil/core";
let autoCheckBoxId = 0;
export class CheckBoxRender {
    constructor(component, handlers) {
        this.component = component;
        this.handleChange = handlers.handleChange;
    }
    getNativeInputId() {
        return this.getNativeInput().id;
    }
    getNativeInput() {
        return this.component.element.querySelector("[data-native-element]");
    }
    getCssClasses() {
        const checkbox = this.component;
        const classList = [];
        classList.push("custom-control-input");
        if (checkbox.cssClass) {
            classList.push(checkbox.cssClass);
        }
        if (!checkbox.caption) {
            classList.push("position-static");
        }
        return classList.join(" ");
    }
    getValueFromEvent(event) {
        return event.target && event.target.checked;
    }
    /**
     * Update the native input element when the value changes
     */
    checkedChanged() {
        const inputEl = this.getNativeInput();
        if (inputEl && inputEl.checked !== this.component.checked) {
            inputEl.checked = this.component.checked;
        }
    }
    render() {
        const checkbox = this.component;
        if (!this.inputId) {
            this.inputId = checkbox.element.id
                ? `${checkbox.element.id}__checkbox`
                : `gx-checkbox-auto-id-${autoCheckBoxId++}`;
        }
        const attris = {
            "aria-disabled": checkbox.disabled ? "true" : undefined,
            class: this.getCssClasses(),
            "data-native-element": "",
            disabled: checkbox.disabled,
            id: this.inputId,
            onInput: this.handleChange
        };
        const forAttris = {
            for: attris.id
        };
        return [
            h("gx-bootstrap", null),
            h("div", { class: "custom-control custom-checkbox" },
                h("input", Object.assign({}, attris, { type: "checkbox", checked: checkbox.checked, value: checkbox.checked ? checkbox.checkedValue : checkbox.unCheckedValue })),
                h("label", Object.assign({ class: "custom-control-label" }, forAttris, { "aria-hidden": (!checkbox.caption).toString() }), checkbox.caption))
        ];
    }
}
