import { h } from "@stencil/core";
let autoCheckBoxId = 0;
export class SwitchRender {
    constructor(component) {
        this.component = component;
    }
    getNativeInputId() {
        return this.getNativeInput().id;
    }
    getNativeInput() {
        return this.component.element.querySelector("[data-native-element]");
    }
    getValueFromEvent(event) {
        return event.target && event.target.checked;
    }
    handleChange(event) {
        this.component.checked = this.getValueFromEvent(event);
        this.component.input.emit(event);
    }
    /**
     * Update the native input element when the value changes
     */
    checkedChanged() {
        const inputEl = this.getNativeInput();
        if (inputEl && inputEl.checked !== this.component.checked) {
            inputEl.checked = this.component.checked;
        }
    }
    render() {
        const switchCmp = this.component;
        if (!this.inputId) {
            this.inputId = switchCmp.element.id
                ? `${switchCmp.element.id}_checkbox`
                : `gx-checkbox-auto-id-${autoCheckBoxId++}`;
        }
        const inputAttrs = {
            "aria-checked": switchCmp.checked ? "true" : "false",
            "aria-disabled": switchCmp.disabled ? "true" : "false",
            checked: switchCmp.checked,
            class: "switch",
            "data-native-element": "",
            disabled: switchCmp.disabled,
            id: this.inputId,
            onChange: this.handleChange.bind(this),
            type: "checkbox"
        };
        return [
            h("gx-bootstrap", null),
            h("span", { class: "switch switch-sm" },
                h("input", Object.assign({}, inputAttrs)),
                h("label", { htmlFor: this.inputId }, switchCmp.caption))
        ];
    }
}
