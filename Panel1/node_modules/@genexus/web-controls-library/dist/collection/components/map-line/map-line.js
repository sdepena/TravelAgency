import { Component, Element, Event, h, Prop } from "@stencil/core";
import { polyline } from "leaflet/dist/leaflet-src.esm";
import { parseCoords } from "../common/coordsValidate";
export class MapLine {
    constructor() {
        /**
         * The coordinates where the line/polyline will appear in the map.
         *
         */
        this.coords = "0, 0";
    }
    setupLine(coords) {
        this.lineInstance = polyline(coords, {
            color: "red",
            weight: 3
        });
    }
    componentDidLoad() {
        const coords = parseCoords(this.coords);
        if (coords !== null) {
            this.setupLine(coords);
        }
        else {
            console.warn("GX warning: Cannot read 'coords' attribute, default coords set (gx-map-line)", this.element);
            this.setupLine([0, 0]);
        }
        this.gxMapLineDidLoad.emit(this.lineInstance);
    }
    componentDidUnload() {
        this.gxMapLineDeleted.emit(this.lineInstance);
    }
    render() {
        return (h("div", null,
            h("slot", null)));
    }
    static get is() { return "gx-map-line"; }
    static get properties() { return {
        "coords": {
            "type": "string",
            "mutable": true,
            "complexType": {
                "original": "string",
                "resolved": "string",
                "references": {}
            },
            "required": false,
            "optional": false,
            "docs": {
                "tags": [],
                "text": "The coordinates where the line/polyline will appear in the map."
            },
            "attribute": "coords",
            "reflect": false,
            "defaultValue": "\"0, 0\""
        }
    }; }
    static get events() { return [{
            "method": "gxMapLineDidLoad",
            "name": "gxMapLineDidLoad",
            "bubbles": true,
            "cancelable": true,
            "composed": true,
            "docs": {
                "tags": [],
                "text": "Emmits when the element is added to a `<gx-map>`."
            },
            "complexType": {
                "original": "any",
                "resolved": "any",
                "references": {}
            }
        }, {
            "method": "gxMapLineDeleted",
            "name": "gxMapLineDeleted",
            "bubbles": true,
            "cancelable": true,
            "composed": true,
            "docs": {
                "tags": [],
                "text": "Emmits when the element is deleted from a `<gx-map>`."
            },
            "complexType": {
                "original": "any",
                "resolved": "any",
                "references": {}
            }
        }]; }
    static get elementRef() { return "element"; }
}
