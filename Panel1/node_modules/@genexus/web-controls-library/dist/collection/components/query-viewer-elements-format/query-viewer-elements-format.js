import { Component, Event, Prop } from "@stencil/core";
export class QueryViewerElementFormat {
    componentDidUpdate() {
        this.elementChanged.emit();
    }
    static get is() { return "gx-query-viewer-element-format"; }
    static get properties() { return {
        "picture": {
            "type": "string",
            "mutable": false,
            "complexType": {
                "original": "string",
                "resolved": "string",
                "references": {}
            },
            "required": false,
            "optional": false,
            "docs": {
                "tags": [],
                "text": "Format on values"
            },
            "attribute": "picture",
            "reflect": false
        },
        "subtotals": {
            "type": "string",
            "mutable": false,
            "complexType": {
                "original": "\"Yes\" | \"Hidden\" | \"No\"",
                "resolved": "\"Hidden\" | \"No\" | \"Yes\"",
                "references": {}
            },
            "required": false,
            "optional": false,
            "docs": {
                "tags": [],
                "text": "How to show subtotals"
            },
            "attribute": "subtotals",
            "reflect": false
        },
        "canDragToPages": {
            "type": "boolean",
            "mutable": false,
            "complexType": {
                "original": "boolean",
                "resolved": "boolean",
                "references": {}
            },
            "required": false,
            "optional": false,
            "docs": {
                "tags": [],
                "text": "If true cand drag to pages"
            },
            "attribute": "can-drag-to-pages",
            "reflect": false
        },
        "formatStyle": {
            "type": "string",
            "mutable": false,
            "complexType": {
                "original": "string",
                "resolved": "string",
                "references": {}
            },
            "required": false,
            "optional": false,
            "docs": {
                "tags": [],
                "text": "Format style"
            },
            "attribute": "format-style",
            "reflect": false
        },
        "targetValue": {
            "type": "string",
            "mutable": false,
            "complexType": {
                "original": "string",
                "resolved": "string",
                "references": {}
            },
            "required": false,
            "optional": false,
            "docs": {
                "tags": [],
                "text": "Target value"
            },
            "attribute": "target-value",
            "reflect": false
        },
        "maximumValue": {
            "type": "string",
            "mutable": false,
            "complexType": {
                "original": "string",
                "resolved": "string",
                "references": {}
            },
            "required": false,
            "optional": false,
            "docs": {
                "tags": [],
                "text": "Max value"
            },
            "attribute": "maximum-value",
            "reflect": false
        }
    }; }
    static get events() { return [{
            "method": "elementChanged",
            "name": "elementChanged",
            "bubbles": true,
            "cancelable": true,
            "composed": true,
            "docs": {
                "tags": [],
                "text": ""
            },
            "complexType": {
                "original": "any",
                "resolved": "any",
                "references": {}
            }
        }]; }
}
