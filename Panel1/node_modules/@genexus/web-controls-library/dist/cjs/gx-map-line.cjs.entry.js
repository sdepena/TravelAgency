'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

const index$1 = require('./index-4863abdd.js');
const coordsValidate = require('./coordsValidate-bc190199.js');

const MapLine = class {
    constructor(hostRef) {
        index$1.registerInstance(this, hostRef);
        this.gxMapLineDidLoad = index$1.createEvent(this, "gxMapLineDidLoad", 7);
        this.gxMapLineDeleted = index$1.createEvent(this, "gxMapLineDeleted", 7);
        /**
         * The coordinates where the line/polyline will appear in the map.
         *
         */
        this.coords = "0, 0";
    }
    setupLine(coords) {
        this.lineInstance = coordsValidate.polyline(coords, {
            color: "red",
            weight: 3
        });
    }
    componentDidLoad() {
        const coords = coordsValidate.parseCoords(this.coords);
        if (coords !== null) {
            this.setupLine(coords);
        }
        else {
            console.warn("GX warning: Cannot read 'coords' attribute, default coords set (gx-map-line)", this.element);
            this.setupLine([0, 0]);
        }
        this.gxMapLineDidLoad.emit(this.lineInstance);
    }
    componentDidUnload() {
        this.gxMapLineDeleted.emit(this.lineInstance);
    }
    render() {
        return (index$1.h("div", null, index$1.h("slot", null)));
    }
    get element() { return index$1.getElement(this); }
};

exports.gx_map_line = MapLine;
