'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

const index$1 = require('./index-4863abdd.js');

const gaugeRangeCss = ".gx-line-clamp{display:-webkit-box;-webkit-box-orient:vertical;-webkit-line-clamp:var(--max-lines);overflow:hidden;max-height:var(--max-height)}.line-measuring{visibility:hidden;position:absolute}gx-gauge-range{display:block}gx-gauge-range[hidden]{display:none !important}gx-gauge-range[hidden][invisible-mode=keep-space]{display:block !important;visibility:hidden}";

const GaugeRange = class {
    constructor(hostRef) {
        index$1.registerInstance(this, hostRef);
        this.gxGaugeRangeDidLoad = index$1.createEvent(this, "gxGaugeRangeDidLoad", 7);
        this.gxGaugeRangeDidUnload = index$1.createEvent(this, "gxGaugeRangeDidUnload", 7);
        this.gxGaugeRangeDidUpdate = index$1.createEvent(this, "gxGaugeRangeDidUpdate", 7);
    }
    componentDidLoad() {
        this.gxGaugeRangeDidLoad.emit(this);
    }
    componentDidUnload() {
        this.gxGaugeRangeDidUnload.emit(this);
    }
    componentDidUpdate() {
        this.gxGaugeRangeDidUpdate.emit(this);
    }
    render() {
        return "";
    }
    get element() { return index$1.getElement(this); }
};
GaugeRange.style = gaugeRangeCss;

exports.gx_gauge_range = GaugeRange;
