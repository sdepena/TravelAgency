import { r as registerInstance, c as createEvent, h, g as getElement } from './index-10623738.js';
import { a as polyline, p as parseCoords } from './coordsValidate-cde38689.js';

const MapLine = class {
    constructor(hostRef) {
        registerInstance(this, hostRef);
        this.gxMapLineDidLoad = createEvent(this, "gxMapLineDidLoad", 7);
        this.gxMapLineDeleted = createEvent(this, "gxMapLineDeleted", 7);
        /**
         * The coordinates where the line/polyline will appear in the map.
         *
         */
        this.coords = "0, 0";
    }
    setupLine(coords) {
        this.lineInstance = polyline(coords, {
            color: "red",
            weight: 3
        });
    }
    componentDidLoad() {
        const coords = parseCoords(this.coords);
        if (coords !== null) {
            this.setupLine(coords);
        }
        else {
            console.warn("GX warning: Cannot read 'coords' attribute, default coords set (gx-map-line)", this.element);
            this.setupLine([0, 0]);
        }
        this.gxMapLineDidLoad.emit(this.lineInstance);
    }
    componentDidUnload() {
        this.gxMapLineDeleted.emit(this.lineInstance);
    }
    render() {
        return (h("div", null, h("slot", null)));
    }
    get element() { return getElement(this); }
};

export { MapLine as gx_map_line };
