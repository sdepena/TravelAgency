(self.webpackChunktravelagencyangular=self.webpackChunktravelagencyangular||[]).push([[767],{86767:function(e,t,r){"use strict";r.r(t),r.d(t,{gx_query_viewer:function(){return s}});var a=r(46841);const s=class{constructor(e){(0,a.r)(this,e),this.mapServices={net:"gxqueryviewerforsd.aspx",java:"qviewer.services.gxqueryviewerforsd"},this.propsNotToPost=["baseUrl","env","mapServices","object","objectCall","propsNotToPost","parameters","elements","dataVersionId"],this.configurationObserver=new MutationObserver(()=>{this.configurationChangedHandler()})}parameterValueChangedHandler(e){e.stopPropagation(),this.getParameters()}elementChangedHandler(e){e.stopPropagation(),this.getElements()}configurationChangedHandler(){this.getParameters(),this.getElements()}componentWillLoad(){this.getParameters(),this.getElements()}componentDidLoad(){this.configurationObserver.observe(this.element,{childList:!0,subtree:!0})}componentDidRender(){this.element.querySelector("form").submit()}disconnectedCallback(){this.configurationObserver.disconnect()}parseObjectToObjectcall(){try{this.objectCall=JSON.parse(this.object)}catch(e){this.objectCall=null}}hasObjectCall(){return Array.isArray(this.objectCall)&&this.objectCall.length>=2}loadObjectNameFromObjectCall(){this.hasObjectCall()&&(this.objectName=this.objectCall[1])}postData(){return this.parseObjectToObjectcall(),this.loadObjectNameFromObjectCall(),[...Object.keys(s.prototype).filter(e=>!this.propsNotToPost.includes(e)).map(e=>(0,a.h)("input",{type:"hidden",name:e,value:this[e]})),(0,a.h)("input",{type:"hidden",name:"Elements",value:this.elements}),(0,a.h)("input",{type:"hidden",name:"Parameters",value:this.parameters})]}getParameters(){const e=[];this.hasObjectCall()?this.objectCall.slice(2).forEach(t=>{const r={};r.Value=encodeURIComponent(t),r.Name="",e.push(r)}):Array.from(document.getElementsByTagName("gx-query-viewer-parameter")).forEach(t=>{const r={};r.Value=encodeURIComponent(t.Value),r.Name=t.Name,e.push(r)}),this.parameters=JSON.stringify(e)}getElements(){const e=[];Array.from(document.getElementsByTagName("gx-query-viewer-element")).forEach(t=>{const r={};r.Name=t.name,r.Title=t.elementTitle,r.Visible=t.visible,r.Type=t.type,r.Axis=t.axis,r.Aggregation=t.aggregation,r.DataField=t.dataField,t.axisOrderType&&(r.AxisOrder={Type:t.axisOrderType},t.axisOrderValues&&(r.AxisOrder.Values=t.axisOrderValues)),t.filterType&&(r.Filter={Type:t.filterType},t.axisOrderValues&&(r.Filter.Values=t.filterValues)),t.expandCollapseType&&(r.ExpandCollapse={Type:t.expandCollapseType},t.axisOrderValues&&(r.ExpandCollapse.Values=t.expandCollapseValues));const a=this.getGrouping(t);Object.keys(a).length>0&&(r.Grouping=a),t.raiseItemClick&&(r.Action={RaiseItemClick:t.raiseItemClick}),Array.from(t.getElementsByTagName("gx-query-viewer-element-format")).forEach(e=>{const a={};a.Picture=e.picture,a.Subtotals=e.subtotals,a.CanDragToPages=e.canDragToPages,a.Style=e.formatStyle,a.TargetValue=e.targetValue,a.MaximumValue=e.maximumValue;const s=Array.from(t.getElementsByTagName("gx-query-viewer-format-style")),i=[],l=[];s.forEach(e=>{"Values"===e.type?i.push({Value:e.value,ApplyToRowOrColumn:e.applyToRowOrColumn,StyleOrClass:e.styleOrClass}):l.push({Value1:e.value1,Value2:e.value2,Operator:e.operator,StyleOrClass:e.styleOrClass})}),i.length>0&&(a.ValuesStyle=i),l.length>0&&(a.ConditionalStyles=l),r.Format=a}),e.push(r)}),this.elements=JSON.stringify(e)}getGrouping(e){return()=>Object.assign(Object.assign(Object.assign(Object.assign(Object.assign(Object.assign(Object.assign(Object.assign(Object.assign(Object.assign(Object.assign({},e.groupingGroupByYear&&{GroupByYear:e.groupingGroupByYear}),e.groupingYearTitle&&{YearTitle:e.groupingYearTitle}),e.groupingGroupBySemester&&{GroupBySemester:e.groupingGroupBySemester}),e.groupingSemesterTitle&&{SemesterTitle:e.groupingSemesterTitle}),e.groupingGroupByQuarter&&{GroupByQuarter:e.groupingGroupByQuarter}),e.groupingQuarterTitle&&{QuarterTitle:e.groupingQuarterTitle}),e.groupingGroupByMonth&&{GroupByMonth:e.groupingGroupByMonth}),e.groupingMonthTitle&&{MonthTitle:e.groupingMonthTitle}),e.groupingGroupByDayOfWeek&&{GroupByDayOfWeek:e.groupingGroupByDayOfWeek}),e.groupingDayOfWeekTitle&&{DayOfWeekTitle:e.groupingDayOfWeekTitle}),e.groupingHideValue&&{HideValue:e.groupingHideValue})}render(){return(0,a.h)(a.H,null,(0,a.h)("iframe",{name:"query_viewer","data-version-id":this.dataVersionId}),(0,a.h)("form",{hidden:!0,target:"query_viewer",action:this.baseUrl+this.mapServices[this.env],method:"POST"},this.postData()))}get element(){return(0,a.g)(this)}};s.style="gx-query-viewer{display:-ms-flexbox;display:flex;-ms-flex:1;flex:1}gx-query-viewer iframe{-ms-flex:1;flex:1;border:0}"}}]);